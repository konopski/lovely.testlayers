[buildout]
extends = coverage.cfg
develop = .
parts = test
        nginx
        coverage
        coverage-test coverage-out-dir
        coverage-report coverage-report-dir
        scripts
        postgres

[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color']
eggs = lovely.testlayers [mysql, pgsql, cassandra]

[nginx]
# this part is used to generate an nginx installation for the nginx testlayer
recipe = hexagonit.recipe.cmmi
url = http://nginx.org/download/nginx-1.0.15.tar.gz
extra_options = --with-debug

[scripts]
recipe = zc.recipe.egg:script
interpreter = py
eggs = lovely.testlayers [mysql, pgsql, cassandra]

[postgres]
recipe = hexagonit.recipe.cmmi
url=http://ftp.postgresql.org/pub/source/v8.4.16/postgresql-8.4.16.tar.gz


# separate test suite and test runner for mongodb
# setup: bin/buildout install mongodb mongodb-test
# run:   bin/test-mongodb

[mongodb]
recipe = rod.recipe.mongodb
darwin-32bit-url = http://downloads.mongodb.org/osx/mongodb-osx-i386-2.4.4.tgz
darwin-64bit-url = http://downloads.mongodb.org/osx/mongodb-osx-x86_64-2.4.4.tgz
linux2-32bit-url = http://downloads.mongodb.org/linux/mongodb-linux-i686-2.4.4.tgz
linux2-64bit-url = http://downloads.mongodb.org/linux/mongodb-linux-x86_64-2.4.4.tgz

[mongodb-test]
recipe = zc.recipe.testrunner
script = test-mongodb
eggs = lovely.testlayers [mongodb]
defaults = ['--suite-name=mongodb_suite', '--auto-color']
requires = ${mongodb:recipe}
